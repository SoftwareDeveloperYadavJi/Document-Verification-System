// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  Int            @id @default(autoincrement())
  email               String         @unique
  mobile              String?        @unique
  name                String
  password            String
  otp                 String?
  refreshToken        String?
  passwordResetToken  String?
  passwordResetExpire DateTime?
  orgPublicKey        String?
  twoFactorEnabled    Boolean        @default(true)
  role                Role           @default(USER)
  verified            Boolean        @default(false)
  SharingLinks        SharingLinks[]
  organizations       OrganizationMemebes[]
  Certififate         Certififate[]
  created             DateTime       @default(now())
  updated             DateTime       @updatedAt
}

model OrganizationMemebes {
  id       Int    @id @default(autoincrement())
  name     String
  email    String @unique
  password String
  role     Role   @default(ORGANIZATION_MEMBER)
  userId   Int
  created  DateTime @default(now())
  updated  DateTime @updatedAt
  user     User     @relation(fields: [userId], references: [id])
}

model SharingLinks {
  id       Int      @id @default(autoincrement())
  link     String
  expireAt DateTime
  userId   Int
  created  DateTime @default(now())
  updated  DateTime @updatedAt
  user     User     @relation(fields: [userId], references: [id])
}


model Certififate{
  id        Int      @id @default(autoincrement())
  name      String
  matadata  String?
  url       String
  type      String
  userId    Int
  created   DateTime @default(now())
  updated   DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
}







enum Role {
  USER
  ADMIN
  ORGANIZATION
  ORGANIZATION_MEMBER
  VARIFIER
}

enum CertififateType {
  GRADUATION
  POSTGRADUATION
  DIPLOMA
  DOCTORATE
  ASSOCIATE_DEGREE
  HONORARY_DEGREE
  COURSE_COMPLETION
  TRANSFER
  MIGRATION
  PROFESSIONAL
  VOCATIONAL
  ONLINE_COURSE
  INTERNSHIP
  WORKSHOP
  SEMINAR
  RESEARCH_PRESENTATION
  HACKATHON
  MERIT
  EXCELLENCE_AWARD
  BEST_STUDENT
  LEADERSHIP
  VOLUNTEER_SERVICE
  CHARACTER
  PROVISIONAL_DEGREE
  BONAFIDE
  MARKSHEET
  ENROLLMENT
}